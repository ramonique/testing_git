ABCD:
  Has three variations of a simple grammar with terms A, B, C, D and S. 
  GrammarA has 1 ambiguity. The sentence a can be either 
          (AtoS aA)
        | (BtoS aB)


  GrammarAS has 1 ambiguity.
  Two consecutive a's can be parsed either as 
    s1 (a a) b
    s1 a (s1 a b).
  
  GrammarABCD has 1 ambiguity.

all:
  Combines the ambiguities of YouWalk (1), Duck (3) and Telescope (3).
  The result should be a sum of the ambiguities

  Duck adds ditransitive verbs to the mix, which adds the ambiguities
  to 7, due to the ambiguities in Telescope: an ambiguous NP can be
  either in a subject, object or indirect object position.

  From a practical point of view, 6 or 7 are both fine numbers.


barn_ar_vilt:
  A complement is ambiguous only if the subject is of neutrum gender.
  NOUN is wild_A =
     NOUN<utrum> 채r vild -- NOUN<neutrum> 채r vilt

  NOUN is game_N =
     NOUN<utrum> 채r vilt -- NOUN<neutrum> 채r vilt


complement-fixing_mouse_antibody:
  TODO
  Apposition and modification.

delicious_fish:
  This is ambiguous only in the NP level ("fish" can be either Sg or Pl), 
  but not on the sentence level: 
  "the fish is delicious" or "the fish are delicious".

made_her_duck:
  Ambiguity is caused by three factors:
    a) verb "make" can be transitive (V2), ditransitive (V3) or
       take a verbal complement (V2V)
    b) "duck" can be either a verb or a noun, thus it can fit as a complement 
       of any of those verb types
    c) "her" can be direct object, indirect object or possessive, 
       so "made her duck" can be 
         * NP (Poss her) (N duck)
         * (NP her) (V duck)
         * (NP her) (N duck)

  The ambiguities are three:
    a) she made her <NOUN>
        Ambiguous between make_V2 & her_Poss and make_V3 & her_Obj

    b) she made <NOUN> duck
        Ambiguous between make_V2v & duck_V and make_V2 & duck_N

    c) she made her duck
        Ambiguous between
           make_V2V, she_Pron, duck_V
           make_V2 , she_Poss, duck_N
           make_V3 , she_Pron, duck_N

many_tigers_panthers_fish:
  Two varieties of lexical ambiguity: Fish is identical in Sg and Pl,
  and Cat is identical with Tiger in Sg, and with Dog in Pl.

  Each of the four lexical items; Tiger, Cat, Dog and Fish should be reported.
  Nothing with the-functions in this grammar.

obj_or_adv:
  This grammar is ambiguous in Finnish but not in English.
  Problem: part_Prep doesn't have a string linearisation in Finnish,
  it just affects the case of the dependent noun.
  from7behind_Prep has a string and it affects the case of the dependent noun.
  Result: these trees are ambiguous
     a) BasicPP from7behind_Prep (the_NounPhrase_1 0)
     b) BasicPP part_Prep (PossNP (the_NounPhrase_1 0) taka_N)
    in context : PrepVP ( VtoVP ( the_Verb_1 0 ) ) ['*'] ) 


  Variation in ObjAdvWithTransVerbs:
    Adding transitive verbs adds another ambiguity: 
    the string "NOUN<gen> takaa" can be parsed as a PP, 
    or it can be parsed as a NounPhrase in an object case.

orange_and_apple:
 TODO

sharedgrammar:
  This is the base for the grammars. It has categories 
  SimpleNoun; NounPhrase; Verb; Verb2; Verb3; Verb2Verb; VerbPhrase; PP ;  Preposition ; Pronoun ; S .
  It doesn't have any words in it, so it doesn't have ambiguities.

tiger_panther_fish:
  TODO

understand:
  A string can be parsed as a VP either

    a) V2 + noun
    b) V which is a particle verb 

  The offending items are understand_V and the combination get_V2 reason_N.
  This is a single ambiguity.

  In case of other particle verbs, they should be reported as a different
  ambiguity. TODO an example that has more particle verbs in it.

with_telescope:
  Basic PP attachment problem.

you_walk:
  Lexical ambiguity: you can be singular or plural.
